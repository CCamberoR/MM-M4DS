<?xml version="1.0" encoding="UTF-8"?>
<Library:Library xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ContractDefinition="https://www.example.org/contractDef" xmlns:Library="http://www.example.org/Library" xsi:schemaLocation="https://www.example.org/contractDef ../metamodel/ContractDef.ecore http://www.example.org/Library ../metamodel/Library.ecore" name="library_validation_example">
  <dataprocessingdefinition xsi:type="Library:Transformation" name="def_impute_categorical_col_der_value" in="//@dataprocessingdefinition.0/@inputPort.0/@datafielddefinition.0" out="//@dataprocessingdefinition.0/@outputPort.0/@datafielddefinition.0">
    <parameterdefinition xsi:type="Library:DerivedValueDef" name="def_parameter_impute_categorical_col_der_value"/>
    <contractdefinition name="def_PRECONDITION_impute_categorical_col">
      <contractDefinition xsi:type="ContractDefinition:ValueRangeDefinition" name="def_PRE_value_range_impute_categorical_col">
        <in xsi:type="ContractDefinition:DataFieldDef" name="def_PRE_input_datafield_impute_categorical_col"/>
        <valuedefinition xsi:type="ContractDefinition:SpecialValueDef" name="def_PRE_special_value_impute_categorical_col">
          <quantitydef xsi:type="ContractDefinition:PercentDef" name="def_PRE_percent_impute_categorical col"/>
        </valuedefinition>
      </contractDefinition>
    </contractdefinition>
    <contractdefinition name="def_POSTCONDITION_impute_categorical_col">
      <contractDefinition xsi:type="ContractDefinition:ValueRangeDefinition" type="POSTCONDITION" name="def_POST_value_range_impute_categorical_col">
        <in xsi:type="ContractDefinition:DataFieldDef" name="def_POST_input_datafield_impute_categorical_col"/>
        <valuedefinition xsi:type="ContractDefinition:SpecialValueDef" name="def_POST_special_value_impute_categorical_col"/>
      </contractDefinition>
    </contractdefinition>
    <contractdefinition name="def_INVARIANT_impute_categorical_col">
      <contractDefinition xsi:type="ContractDefinition:ConditionDef" type="INVARIANT" name="def_INV_condition_impute_categorical_col">
        <in xsi:type="ContractDefinition:DataFieldDef" name="def_INV_input_datafield_impute_categorical_col"/>
        <out xsi:type="ContractDefinition:DataFieldDef" name="def_INV_output_datafield_impute_categorical_col"/>
        <thendefinition ifdefinition="//@dataprocessingdefinition.0/@contractdefinition.2/@contractDefinition/@ifdefinition.0" name="def_INV_THEN_impute_categorical_col">
          <valueResult xsi:type="ContractDefinition:DerivedValueDef" name="def_INV_derived_value_impute_categorical_col"/>
        </thendefinition>
        <ifdefinition thendefinition="//@dataprocessingdefinition.0/@contractdefinition.2/@contractDefinition/@thendefinition.0" name="def_INV_IF_impute_categorical_col">
          <valueCondition xsi:type="ContractDefinition:SpecialValueDef" name="def_INV_special_value_impute_categorical_col"/>
        </ifdefinition>
      </contractDefinition>
    </contractdefinition>
    <inputPort name="def_impute_categorical_input_dataDictionary">
      <datafielddefinition xsi:type="Library:CategoricalDef" name="def_impute_categorical_input_dataField"/>
    </inputPort>
    <outputPort name="def_impute_categorical_output_dataDictionary">
      <datafielddefinition xsi:type="Library:CategoricalDef" name="def_impute_categorical_output_dataField"/>
    </outputPort>
  </dataprocessingdefinition>
  <dataprocessingdefinition xsi:type="Library:Transformation" name="def_impute_categorical_col_fix_value" in="//@dataprocessingdefinition.0/@inputPort.0/@datafielddefinition.0" out="//@dataprocessingdefinition.0/@outputPort.0/@datafielddefinition.0">
    <parameterdefinition xsi:type="Library:FixValueDef" name="def_parameter_impute_categorical_col_fix_value"/>
    <contractdefinition name="def_PRECONDITION_impute_categorical_col_fix_vlue">
      <contractDefinition xsi:type="ContractDefinition:ValueRangeDefinition" name="def_PRE_value_range_impute_categorical_col_fix_vlue">
        <in xsi:type="ContractDefinition:DataFieldDef" name="def_PRE_input_datafield_impute_categorical_col_fix_vlue"/>
        <valuedefinition xsi:type="ContractDefinition:SpecialValueDef" name="def_PRE_special_value_impute_categorical_col_fix_vlue">
          <quantitydef xsi:type="ContractDefinition:PercentDef" name="def_PRE_percent_impute_categorical col_fix_vlue"/>
        </valuedefinition>
      </contractDefinition>
    </contractdefinition>
    <contractdefinition name="def_POSTCONDITION_impute_categorical_col_fix_value">
      <contractDefinition xsi:type="ContractDefinition:ValueRangeDefinition" type="POSTCONDITION" name="def_POST_value_range_impute_categorical_col_fix_vlue">
        <in xsi:type="ContractDefinition:DataFieldDef" name="def_POST_input_datafield_impute_categorical_col_fix_vlue"/>
        <valuedefinition xsi:type="ContractDefinition:SpecialValueDef" name="def_POST_special_value_impute_categorical_col_fix_vlue"/>
      </contractDefinition>
    </contractdefinition>
    <contractdefinition name="def_INVARIANT_impute_categorical_col_fix_value">
      <contractDefinition xsi:type="ContractDefinition:ConditionDef" type="INVARIANT" name="def_INV_condition_impute_categorical_col_fix_vlue">
        <in xsi:type="ContractDefinition:DataFieldDef" name="def_INV_input_datafield_impute_categorical_col_fix_vlue"/>
        <out xsi:type="ContractDefinition:DataFieldDef" name="def_INV_output_datafield_impute_categorical_col_fix_vlue"/>
        <thendefinition ifdefinition="//@dataprocessingdefinition.1/@contractdefinition.2/@contractDefinition/@ifdefinition.0" name="def_INV_THEN_impute_categorical_col_fix_vlue">
          <valueResult xsi:type="ContractDefinition:FixValueDef" name="def_INV_fix_value_impute_categorical_col_fix_vlue"/>
        </thendefinition>
        <ifdefinition thendefinition="//@dataprocessingdefinition.1/@contractdefinition.2/@contractDefinition/@thendefinition.0" name="def_INV_IF_impute_categorical_col_fix_vlue">
          <valueCondition xsi:type="ContractDefinition:SpecialValueDef" name="def_INV_special_value_impute_categorical_col_fix_value"/>
        </ifdefinition>
      </contractDefinition>
    </contractdefinition>
    <inputPort name="def_impute_categorical_fix_value_input_dataDictionary">
      <datafielddefinition xsi:type="Library:CategoricalDef" name="def_impute_categorical_fix_value_input_dataField"/>
    </inputPort>
    <outputPort name="def_impute_categorical_fix_value_output_dataDictionary">
      <datafielddefinition xsi:type="Library:CategoricalDef" name="def_impute_categorical_fix_value_output_dataField"/>
    </outputPort>
  </dataprocessingdefinition>
  <dataprocessingdefinition xsi:type="Library:Transformation" name="def_row_filter" in="//@dataprocessingdefinition.2/@inputPort.0/@datafielddefinition.0" out="//@dataprocessingdefinition.2/@outputPort.0/@datafielddefinition.0">
    <parameterdefinition xsi:type="Library:FilterValueDef" name="def_parameter_filter_row_filter"/>
    <parameterdefinition xsi:type="Library:PrimitiveDef" name="def_parameter_primitive_row_filter"/>
    <contractdefinition name="def_PRECONDITION_row_filter">
      <contractDefinition xsi:type="ContractDefinition:ValueRangeDefinition" name="def_PRE_value_range_row_filter">
        <in xsi:type="ContractDefinition:DataFieldDef" name="def_PRE_input_datafield_row_filter"/>
        <valuedefinition xsi:type="ContractDefinition:FixValueDef" name="def_PRE_fix_value_row_filter"/>
      </contractDefinition>
    </contractdefinition>
    <contractdefinition name="def_POSTCONDITION_row_filter">
      <contractDefinition xsi:type="ContractDefinition:ValueRangeDefinition" type="POSTCONDITION" name="def_POST_value_range_row_filter">
        <in xsi:type="ContractDefinition:DataFieldDef" name="def_POST_input_datafield_row_filter"/>
        <valuedefinition xsi:type="ContractDefinition:FixValueDef" name="def_POST_fix_value_row_filter"/>
      </contractDefinition>
    </contractdefinition>
    <inputPort name="def_row_filter_input_DataDictionary">
      <datafielddefinition xsi:type="Library:ContinuousDef" name="def_row_filter_input_dataField"/>
    </inputPort>
    <outputPort name="def_row_filter_output_DataDictionary">
      <datafielddefinition xsi:type="Library:ContinuousDef" name="def_row_filter_output_dataField"/>
    </outputPort>
  </dataprocessingdefinition>
  <dataprocessingdefinition xsi:type="Library:Transformation" name="def_column_cont_filter" in="//@dataprocessingdefinition.3/@inputPort.0" out="//@dataprocessingdefinition.3/@outputPort.0">
    <parameterdefinition xsi:type="Library:FieldDef" name="def_field_parameter_column_cont_filter"/>
    <contractdefinition name="def_PRECONDITION_column_cont_filter">
      <contractDefinition xsi:type="ContractDefinition:FieldRangeDefinition" name="def_PRE_field_range_column_cont_filter">
        <in xsi:type="ContractDefinition:DataDictionaryDef" name="def_PRE_in_dataDictionary_column_cont_filter"/>
      </contractDefinition>
    </contractdefinition>
    <contractdefinition name="def_POSTCONDITION_column_cont_filter">
      <contractDefinition xsi:type="ContractDefinition:FieldRangeDefinition" type="POSTCONDITION" name="def_POST_field_range_range_column_cont_filter">
        <in xsi:type="ContractDefinition:DataDictionaryDef" name="def_POST_in_dataDictionary_column_cont_filter"/>
      </contractDefinition>
    </contractdefinition>
    <inputPort name="def_column_cont_filter_input_DataDictionary">
      <datafielddefinition xsi:type="Library:ContinuousDef" name="def_input_column_cont_filter"/>
    </inputPort>
    <outputPort name="def_column_cont_filter_output_DataDictionary"/>
  </dataprocessingdefinition>
  <dataprocessingdefinition xsi:type="Library:Transformation" name="def_column_cat_filter" in="//@dataprocessingdefinition.4/@inputPort.0" out="//@dataprocessingdefinition.4/@outputPort.0">
    <parameterdefinition xsi:type="Library:FieldDef" name="def_field_parameter_column_cat_filter"/>
    <contractdefinition name="def_PRECONDITION_column_cat_filter">
      <contractDefinition xsi:type="ContractDefinition:FieldRangeDefinition" name="def_PRE_field_range_column_cat_filter">
        <in xsi:type="ContractDefinition:DataDictionaryDef" name="def_PRE_in_dataDictionary_column_cat_filter"/>
      </contractDefinition>
    </contractdefinition>
    <contractdefinition name="def_POSTCONDITION_column_cont_filter">
      <contractDefinition xsi:type="ContractDefinition:FieldRangeDefinition" type="POSTCONDITION" name="def_POST_field_range_range_column_cat_filter">
        <in xsi:type="ContractDefinition:DataDictionaryDef" name="def_POST_in_dataDictionary_column_cat_filter"/>
      </contractDefinition>
    </contractdefinition>
    <inputPort name="def_column_cat_filter_input_DataDictionary">
      <datafielddefinition xsi:type="Library:CategoricalDef" name="def_column_cat_filter_input_dataField"/>
    </inputPort>
    <outputPort name="def_column_cat_filter_output_DataDictionary"/>
  </dataprocessingdefinition>
  <dataprocessingdefinition xsi:type="Library:Transformation" name="def_impute_categorical_columns_der_value" in="//@dataprocessingdefinition.5/@inputPort.0/@datafielddefinition.0" out="//@dataprocessingdefinition.5/@outputPort.0/@datafielddefinition.0">
    <parameterdefinition xsi:type="Library:DerivedValueDef" name="def_parameter_impute_categorical_columns_der_value"/>
    <contractdefinition name="def_PRECONDITION_impute_categorical_columns">
      <contractDefinition xsi:type="ContractDefinition:ValueRangeDefinition" name="def_PRE_value_range_impute_categorical_columns">
        <in xsi:type="ContractDefinition:DataFieldDef" name="def_PRE_input_datafield_impute_categorical_columns"/>
        <valuedefinition xsi:type="ContractDefinition:SpecialValueDef" name="def_PRE_special_value_impute_categorical_columns">
          <quantitydef xsi:type="ContractDefinition:PercentDef" name="def_PRE_percent_impute_categorical_columns"/>
        </valuedefinition>
      </contractDefinition>
    </contractdefinition>
    <contractdefinition name="def_POSTCONDITION_impute_categorical_columns">
      <contractDefinition xsi:type="ContractDefinition:ValueRangeDefinition" type="POSTCONDITION" name="def_POST_value_range_impute_categorical_columns">
        <in xsi:type="ContractDefinition:DataFieldDef" name="def_POST_input_datafield_impute_categorical_columns"/>
        <valuedefinition xsi:type="ContractDefinition:SpecialValueDef" name="def_POST_special_value_impute_categorical_columns"/>
      </contractDefinition>
    </contractdefinition>
    <contractdefinition name="def_INVARIANT_impute_categorical_columns">
      <contractDefinition xsi:type="ContractDefinition:ConditionDef" type="INVARIANT" name="def_INV_condition_impute_categorical_columns">
        <in xsi:type="ContractDefinition:DataFieldDef" name="def_INV_input_datafield_impute_categorical_columns"/>
        <out xsi:type="ContractDefinition:DataFieldDef" name="def_INV_output_datafield_impute_categorical_columns"/>
        <thendefinition ifdefinition="//@dataprocessingdefinition.5/@contractdefinition.2/@contractDefinition/@ifdefinition.0" name="def_INV_THEN_impute_categorical_columns">
          <valueResult xsi:type="ContractDefinition:DerivedValueDef" name="def_POST_derived_value_impute_categorical_columns"/>
        </thendefinition>
        <ifdefinition thendefinition="//@dataprocessingdefinition.5/@contractdefinition.2/@contractDefinition/@thendefinition.0" name="def_INV_IF_impute_categorical_columns">
          <valueCondition xsi:type="ContractDefinition:SpecialValueDef" name="def_INV_special_value_impute_categorical_columns"/>
        </ifdefinition>
      </contractDefinition>
    </contractdefinition>
    <inputPort name="def_impute_categorical_columns_input_dataDictionary">
      <datafielddefinition xsi:type="Library:CategoricalDef" name="def_impute_categorical_columns_input_dataField"/>
    </inputPort>
    <outputPort name="def_impute_categorical_columns_output_dataDictionary">
      <datafielddefinition xsi:type="Library:CategoricalDef" name="def_impute_categorical_columns_output_dataField"/>
    </outputPort>
  </dataprocessingdefinition>
  <dataprocessingdefinition xsi:type="Library:Transformation" name="def_map_categorical_col" in="//@dataprocessingdefinition.6/@inputPort.0/@datafielddefinition.0" out="//@dataprocessingdefinition.6/@outputPort.0/@datafielddefinition.0">
    <parameterdefinition xsi:type="Library:MapDef" name="def_parameter_map_categorical_col"/>
    <contractdefinition name="def_POSTCONDITION_map_categorical_col">
      <contractDefinition xsi:type="ContractDefinition:ValueRangeDefinition" type="POSTCONDITION" name="def_POST_value_range_map_categorical_col">
        <in xsi:type="ContractDefinition:DataFieldDef" name="def_POST_input_datafield_map_categorical_col"/>
        <valuedefinition xsi:type="ContractDefinition:FixValueDef" name="def_POST_fix_value_map_categorical_col"/>
      </contractDefinition>
    </contractdefinition>
    <contractdefinition name="def_PRECONDITION_map_categorical_col">
      <contractDefinition xsi:type="ContractDefinition:ValueRangeDefinition" name="def_PRE_value_range_map_categorical_col">
        <in xsi:type="ContractDefinition:DataFieldDef" name="def_PRE_input_datafield_map_categorical_col"/>
        <valuedefinition xsi:type="ContractDefinition:FixValueDef" name="def_PRE_fix_value_map_categorical_col"/>
      </contractDefinition>
    </contractdefinition>
    <contractdefinition name="def_INV_map_categorical_col">
      <contractDefinition xsi:type="ContractDefinition:ConditionDef" type="INVARIANT" name="def_INV_condition_map_categorical_col">
        <in xsi:type="ContractDefinition:DataFieldDef" name="def_INV_input_datafield_map_categorical_col"/>
        <out xsi:type="ContractDefinition:DataFieldDef" name="def_INV_output_datafield_map_categorical_col"/>
        <thendefinition ifdefinition="//@dataprocessingdefinition.6/@contractdefinition.2/@contractDefinition/@ifdefinition.0" name="def_INV_THEN_map_categorical_col">
          <valueResult xsi:type="ContractDefinition:FixValueDef" name="def_INV_value_result_fix_map_categorical_col"/>
        </thendefinition>
        <ifdefinition thendefinition="//@dataprocessingdefinition.6/@contractdefinition.2/@contractDefinition/@thendefinition.0" name="def_INV_IF_map_categorical_col">
          <valueCondition xsi:type="ContractDefinition:FixValueDef" name="def_INV_value_input_fix_map_categorical_col"/>
        </ifdefinition>
      </contractDefinition>
    </contractdefinition>
    <inputPort name="def_map_categorical_col_input_dataDictionary">
      <datafielddefinition xsi:type="Library:CategoricalDef" name="def_map_categorical_col_input_dataField"/>
    </inputPort>
    <outputPort name="def_map_categorical_col_output_dataDictionary">
      <datafielddefinition xsi:type="Library:CategoricalDef" name="def_map_categorical_col_output_dataField"/>
    </outputPort>
  </dataprocessingdefinition>
  <dataprocessingdefinition xsi:type="Library:Transformation" name="def_impute_cont_columns" in="//@dataprocessingdefinition.7/@inputPort.0/@datafielddefinition.0" out="//@dataprocessingdefinition.7/@outputPort.0/@datafielddefinition.0">
    <parameterdefinition xsi:type="Library:NumOpDef" name="def_impute_cont_columns_param_numOp" dataType="Float"/>
    <contractdefinition name="def_PRECONDITION_impute_cont_columns_param_numOp">
      <contractDefinition xsi:type="ContractDefinition:ValueRangeDefinition" name="PRE_value_range_impute_cont_columns">
        <in xsi:type="ContractDefinition:DataFieldDef" name="PRE_input_datafield_impute_cont_columns"/>
        <valuedefinition xsi:type="ContractDefinition:SpecialValueDef" name="PRE_special_value_impute_cont_columns"/>
      </contractDefinition>
    </contractdefinition>
    <contractdefinition name="def_POSTCONDITION_impute_cont_columns_param_numOp">
      <contractDefinition xsi:type="ContractDefinition:ValueRangeDefinition" type="POSTCONDITION" name="POST_value_range_impute_cont_columns">
        <in xsi:type="ContractDefinition:DataFieldDef" name="POST_input_datafield_impute_cont_columns"/>
        <valuedefinition xsi:type="ContractDefinition:SpecialValueDef" name="POST_special_value_impute_cont_columns"/>
      </contractDefinition>
    </contractdefinition>
    <contractdefinition name="def_INVARIANT_impute_cont_columns_param_numOp">
      <contractDefinition xsi:type="ContractDefinition:ConditionDef" type="INVARIANT" name="INV_condition_impute_cont_columns">
        <in xsi:type="ContractDefinition:DataFieldDef" name="INV_input_dataField_impute_cont_columns"/>
        <out xsi:type="ContractDefinition:DataFieldDef" name="INV_output_dataField_impute_cont_columns"/>
        <thendefinition ifdefinition="//@dataprocessingdefinition.7/@contractdefinition.2/@contractDefinition/@ifdefinition.0" name="INV_THEN_impute_cont_columns">
          <valueResult xsi:type="ContractDefinition:NumOpDef" name="INV_value_result_impute_cont_columns"/>
        </thendefinition>
        <ifdefinition thendefinition="//@dataprocessingdefinition.7/@contractdefinition.2/@contractDefinition/@thendefinition.0" name="INV_IF_impute_cont_columns">
          <valueCondition xsi:type="ContractDefinition:SpecialValueDef" name="INV_value_input_impute_cont_columns"/>
        </ifdefinition>
      </contractDefinition>
    </contractdefinition>
    <inputPort name="def_impute_cont_columns_input_dataDictionary">
      <datafielddefinition xsi:type="Library:ContinuousDef" name="def_impute_cont_columns_input_dataField"/>
    </inputPort>
    <outputPort name="def_impute_cont_columns_output_dataDictionary">
      <datafielddefinition xsi:type="Library:ContinuousDef" name="def_impute_cont_columns_output_dataField"/>
    </outputPort>
  </dataprocessingdefinition>
  <dataprocessingdefinition xsi:type="Library:Transformation" name="def_stringToNumber" in="//@dataprocessingdefinition.8/@inputPort.0/@datafielddefinition.0" out="//@dataprocessingdefinition.8/@outputPort.0/@datafielddefinition.0">
    <contractdefinition name="def_INVARIANT_stringToNumber">
      <contractDefinition xsi:type="ContractDefinition:ConditionDef" name="def_INV_condition_stringToNumber">
        <in xsi:type="ContractDefinition:DataFieldDef" name="def_INV_input_datafield"/>
        <out xsi:type="ContractDefinition:DataFieldDef" name="def_INV_output_datafield"/>
        <thendefinition ifdefinition="//@dataprocessingdefinition.8/@contractdefinition.0/@contractDefinition/@ifdefinition.0" name="def_INV_THEN_stringToNumber">
          <valueResult xsi:type="ContractDefinition:SpecialValueDef" name="def_INV_valueResult_stringToNumber"/>
        </thendefinition>
        <ifdefinition thendefinition="//@dataprocessingdefinition.8/@contractdefinition.0/@contractDefinition/@thendefinition.0" name="def_INV_IF_stringToNumber">
          <valueCondition xsi:type="ContractDefinition:SpecialValueDef" name="def_INV_valueCondition_stringToNumber"/>
        </ifdefinition>
      </contractDefinition>
    </contractdefinition>
    <inputPort name="def_input_stringToNumber">
      <datafielddefinition xsi:type="Library:CategoricalDef" name="def_stringToNumber_input_datafield"/>
    </inputPort>
    <outputPort name="def_output_stringToNumber">
      <datafielddefinition xsi:type="Library:ContinuousDef" name="def_stringToNumber_output_datafield"/>
    </outputPort>
  </dataprocessingdefinition>
  <dataprocessingdefinition xsi:type="Library:Transformation" name="def_binner" in="//@dataprocessingdefinition.9/@inputPort.0/@datafielddefinition.0" out="//@dataprocessingdefinition.9/@outputPort.0/@datafielddefinition.0">
    <parameterdefinition xsi:type="Library:DerivedFieldDef" name="def_binner_parameter_derived_field"/>
    <parameterdefinition xsi:type="Library:DiscretizeBinDef" name="def_binner_parameter_bin"/>
    <contractdefinition name="def_PRECONDITION_binner">
      <contractDefinition xsi:type="ContractDefinition:ValueRangeDefinition" name="def_PRE_binner_value_range">
        <in xsi:type="ContractDefinition:DataFieldDef" name="def_PRE_binner_input_dataField"/>
        <valuedefinition xsi:type="ContractDefinition:IntervalDef" name="def_PRE_binner_interval"/>
      </contractDefinition>
    </contractdefinition>
    <contractdefinition name="def_POSTCONDITION_binner">
      <contractDefinition xsi:type="ContractDefinition:ValueRangeDefinition" type="POSTCONDITION" name="def_POST_binner_value_range">
        <in xsi:type="ContractDefinition:DataFieldDef" name="def_POST_binner_input_dataField"/>
        <valuedefinition xsi:type="ContractDefinition:IntervalDef" name="def_POST_binner_interval"/>
      </contractDefinition>
    </contractdefinition>
    <contractdefinition name="def_INVARIANT_binner">
      <contractDefinition xsi:type="ContractDefinition:ConditionDef" type="INVARIANT" name="def_INV_binner_condition">
        <in xsi:type="ContractDefinition:DataFieldDef" name="def_INV_binner_input_dataField"/>
        <out xsi:type="ContractDefinition:DataFieldDef" name="def_INV_binner_output_dataField"/>
        <thendefinition ifdefinition="//@dataprocessingdefinition.9/@contractdefinition.2/@contractDefinition/@ifdefinition.0" name="def_INV_binner_THEN">
          <valueResult xsi:type="ContractDefinition:FixValueDef" name="def_INV_binner_valueResult"/>
        </thendefinition>
        <ifdefinition thendefinition="//@dataprocessingdefinition.9/@contractdefinition.2/@contractDefinition/@thendefinition.0" name="def_INV_binner_IF">
          <valueCondition xsi:type="ContractDefinition:IntervalDef" name="def_INV_binner_valueCondition"/>
        </ifdefinition>
      </contractDefinition>
    </contractdefinition>
    <inputPort name="def_binner_input_dataDictionary">
      <datafielddefinition xsi:type="Library:ContinuousDef" name="def_binner_input_dataField"/>
    </inputPort>
    <outputPort name="def_binner_output_dataDictionary">
      <datafielddefinition xsi:type="Library:CategoricalDef" name="def_binner_output_dataField"/>
    </outputPort>
  </dataprocessingdefinition>
</Library:Library>
