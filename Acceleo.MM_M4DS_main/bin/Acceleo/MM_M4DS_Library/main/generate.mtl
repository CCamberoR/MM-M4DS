[comment encoding = UTF-8 /]
[**
 * The documentation of the module generate.
 */]
[module generate('http://www.example.org/Library', 'https://www.example.org/contractDef')]
[import Acceleo::MM_M4DS_Workflow::main::generate]

[**
 * The documentation of the template generateElement.
 * @param aLibrary
 */]

[template public generateLibrary(aLibrary : Library)]
[comment @main/]
[generateLibraryProcessing(aLibrary)/]

[/template]

[template public generateLibraryProcessing(aLibrary : Library)]
[file ('library.py', false, 'UTF-8')]
[for (dpf : DataProcessingDefinition | aLibrary.dataprocessingdefinition)]
print('[dpf.name/]')		#DataProcessingDefinition name
[if (dpf.oclIsTypeOf(Transformation))]
[for (cont : ContractDefinition | contractdefinition)]
	print('[cont.name/]')		#ContractDefinition name
		print('[cont.contractDefinition.name/]')		#ContractDefinition.contracDefinition name
[if (cont.contractDefinition._in.oclIsTypeOf(DataDictionaryDef))]
[let ddf : DataDictionaryDef = cont.contractDefinition._in.oclAsType(DataDictionaryDef)]
		print('[ddf.name/]')		#DataDictionaryDef in name
[/let]
[/if]
[if (cont.contractDefinition._in.oclIsTypeOf(DataFieldDef))]
[let dff : DataFieldDef = cont.contractDefinition._in.oclAsType(DataFieldDef)]
		print('[dff.name/]')		#DataFieldDef in name
[/let]
[/if]
[/for]
[/if]
____________________________________________________________________________________
[/for]
[/file]
[/template]









































